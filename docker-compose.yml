version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ton_tracker
      POSTGRES_PASSWORD: ton_tracker_password
      POSTGRES_DB: ton_tracker
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ton_tracker"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  api:
    build: .
    command: python run_api.py
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
    restart: unless-stopped

  bot:
    build: .
    command: python run_bot.py
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      api:
        condition: service_started
    volumes:
      - .:/app
    restart: unless-stopped

  worker:
    build: .
    command: python run_worker.py
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      api:
        condition: service_started
    volumes:
      - .:/app
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

